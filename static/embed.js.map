{"version":3,"file":"embed.js","sources":["../src/lib/embed.ts"],"sourcesContent":["/**\r\n * Dental Chatbot Widget - Self-Contained Embed Script\r\n *\r\n * This script injects the chatbot widget into any website.\r\n * It's designed to work when placed in the <head> or at the end of the <body>.\r\n */\r\n\r\n// Define the global window interface\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tChatbotWidget?: ChatbotWidgetAPI;\r\n\t}\r\n}\r\n\r\n// Constants\r\nconst API_URL = 'http://localhost:3000';\r\n\r\n// ChatbotWidget API Interface\r\ninterface ChatbotWidgetAPI {\r\n\topen: () => void;\r\n\tclose: () => void;\r\n\ttoggle: () => void;\r\n\tisOpen: () => boolean;\r\n}\r\n\r\n// Message interface\r\ninterface ChatMessage {\r\n\tid: string;\r\n\tsender: 'user' | 'bot';\r\n\ttext: string;\r\n\ttimestamp: Date;\r\n}\r\n\r\n// Wait for DOM to be fully loaded before initializing\r\nfunction initialize() {\r\n\t// Prevent multiple initializations\r\n\tif (document.getElementById('dental-chatbot-widget-container')) {\r\n\t\tconsole.warn('Dental Chatbot Widget is already initialized');\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Inject the compiled Tailwind CSS\r\n\tinjectStyles();\r\n\r\n\t// Create widget DOM structure\r\n\tcreateWidgetDOM();\r\n\r\n\t// Initialize state and event listeners\r\n\tinitializeWidget();\r\n}\r\n\r\n// Extract compiled Tailwind CSS classes from the Svelte component\r\nfunction injectStyles() {\r\n\tconst styleElement = document.createElement('style');\r\n\tstyleElement.id = 'dental-chatbot-widget-styles';\r\n\r\n\t// This will be replaced with the actual compiled CSS during build\r\n\tstyleElement.textContent = `\r\n    /* INJECT_COMPILED_CSS */\r\n  `;\r\n\r\n\tdocument.head.appendChild(styleElement);\r\n}\r\n\r\n// Create the widget DOM structure based on the Svelte component\r\nfunction createWidgetDOM() {\r\n\tconst container = document.createElement('div');\r\n\tcontainer.id = 'dental-chatbot-widget-container';\r\n\r\n\t// This will be replaced with the compiled HTML structure during build\r\n\tcontainer.innerHTML = `\r\n    <!-- INJECT_COMPILED_HTML -->\r\n  `;\r\n\r\n\tdocument.body.appendChild(container);\r\n}\r\n\r\n// Initialize the widget state and events\r\nfunction initializeWidget() {\r\n\tlet isMinimized = true;\r\n\tlet userId: string = localStorage.getItem('chatbot-user-id') || generateUUID();\r\n\tlet messages: ChatMessage[] = [];\r\n\tlet isLoading = false;\r\n\tconst hostDomain = window.location.hostname || 'unknown';\r\n\r\n\t// DOM elements\r\n\tconst container = document.getElementById('dental-chatbot-widget-container');\r\n\tconst header = document.querySelector('#dental-chatbot-widget-container .dental-chatbot-header');\r\n\tconst messagesContainer = document.querySelector(\r\n\t\t'#dental-chatbot-widget-container .dental-chatbot-messages'\r\n\t);\r\n\tconst inputField = document.querySelector(\r\n\t\t'#dental-chatbot-widget-container .dental-chatbot-input'\r\n\t) as HTMLInputElement;\r\n\tconst sendButton = document.querySelector(\r\n\t\t'#dental-chatbot-widget-container .dental-chatbot-send'\r\n\t);\r\n\r\n\t// Initialize userId\r\n\tuserId = localStorage.getItem('chatbot-user-id') || generateUUID();\r\n\tlocalStorage.setItem('chatbot-user-id', userId);\r\n\r\n\t// Set initial minimized state\r\n\tconst savedMinimized = localStorage.getItem('chatbot-minimized');\r\n\tif (savedMinimized !== null) {\r\n\t\tisMinimized = JSON.parse(savedMinimized);\r\n\t\tif (!isMinimized) {\r\n\t\t\topenWidget();\r\n\t\t}\r\n\t}\r\n\r\n\t// Load saved messages\r\n\tloadMessages();\r\n\r\n\t// Setup event listeners\r\n\tif (header) {\r\n\t\theader.addEventListener('click', toggleWidget);\r\n\t}\r\n\r\n\tif (inputField) {\r\n\t\tinputField.addEventListener('keydown', (e) => {\r\n\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\tsendMessage();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tif (sendButton) {\r\n\t\tsendButton.addEventListener('click', sendMessage);\r\n\t}\r\n\r\n\t// Initialize global API\r\n\twindow.ChatbotWidget = {\r\n\t\topen: openWidget,\r\n\t\tclose: closeWidget,\r\n\t\ttoggle: toggleWidget,\r\n\t\tisOpen: () => !isMinimized\r\n\t};\r\n\r\n\t// Functions\r\n\tfunction generateUUID(): string {\r\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n\t\t\tconst r = (Math.random() * 16) | 0;\r\n\t\t\tconst v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n\t\t\treturn v.toString(16);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction loadMessages() {\r\n\t\tconst savedMessages = localStorage.getItem('chatbot-messages');\r\n\t\tif (savedMessages) {\r\n\t\t\ttry {\r\n\t\t\t\tconst parsed = JSON.parse(savedMessages);\r\n\t\t\t\tmessages = parsed.map((msg: ChatMessage) => ({\r\n\t\t\t\t\t...msg,\r\n\t\t\t\t\ttimestamp: new Date(msg.timestamp)\r\n\t\t\t\t}));\r\n\t\t\t\trenderMessages();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('Failed to parse saved messages:', e);\r\n\t\t\t\tmessages = [];\r\n\t\t\t\tfetchInitialGreeting();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfetchInitialGreeting();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction saveMessages() {\r\n\t\tlocalStorage.setItem('chatbot-messages', JSON.stringify(messages));\r\n\t}\r\n\r\n\tfunction renderMessages() {\r\n\t\tif (!messagesContainer) return;\r\n\r\n\t\tmessagesContainer.innerHTML = '';\r\n\r\n\t\tmessages.forEach((message) => {\r\n\t\t\tconst messageEl = document.createElement('div');\r\n\t\t\tmessageEl.className = `dental-chatbot-message ${message.sender === 'user' ? 'dental-chatbot-message-user' : 'dental-chatbot-message-bot'}`;\r\n\r\n\t\t\tconst messageText = document.createElement('div');\r\n\t\t\tmessageText.textContent = message.text;\r\n\r\n\t\t\tconst timestamp = document.createElement('div');\r\n\t\t\ttimestamp.className = 'dental-chatbot-timestamp';\r\n\t\t\ttimestamp.textContent = formatTime(message.timestamp);\r\n\r\n\t\t\tmessageEl.appendChild(messageText);\r\n\t\t\tmessageEl.appendChild(timestamp);\r\n\r\n\t\t\tmessagesContainer.appendChild(messageEl);\r\n\t\t});\r\n\r\n\t\tscrollToBottom();\r\n\t}\r\n\r\n\tfunction formatTime(date: Date): string {\r\n\t\treturn date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n\t}\r\n\r\n\tfunction scrollToBottom() {\r\n\t\tif (messagesContainer) {\r\n\t\t\tmessagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function sendMessage() {\r\n\t\tif (!inputField || !inputField.value.trim() || isLoading) return;\r\n\r\n\t\tconst userMessage = inputField.value.trim();\r\n\t\tinputField.value = '';\r\n\t\tisLoading = true;\r\n\r\n\t\tconst messageId = generateUUID();\r\n\r\n\t\tmessages.push({\r\n\t\t\tid: messageId,\r\n\t\t\tsender: 'user',\r\n\t\t\ttext: userMessage,\r\n\t\t\ttimestamp: new Date()\r\n\t\t});\r\n\r\n\t\trenderMessages();\r\n\t\tsaveMessages();\r\n\t\tshowTypingIndicator();\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`${API_URL}/chat`, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tuserId,\r\n\t\t\t\t\tmessage: userMessage,\r\n\t\t\t\t\tdomain: hostDomain\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`API responded with status ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\thideTypingIndicator();\r\n\r\n\t\t\tmessages.push({\r\n\t\t\t\tid: data.id || generateUUID(),\r\n\t\t\t\tsender: 'bot',\r\n\t\t\t\ttext: data.text,\r\n\t\t\t\ttimestamp: data.timestamp ? new Date(data.timestamp) : new Date()\r\n\t\t\t});\r\n\r\n\t\t\trenderMessages();\r\n\t\t\tsaveMessages();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error sending message:', error);\r\n\r\n\t\t\thideTypingIndicator();\r\n\r\n\t\t\tmessages.push({\r\n\t\t\t\tid: generateUUID(),\r\n\t\t\t\tsender: 'bot',\r\n\t\t\t\ttext: 'Sorry, I encountered an error. Please try again later.',\r\n\t\t\t\ttimestamp: new Date()\r\n\t\t\t});\r\n\r\n\t\t\trenderMessages();\r\n\t\t\tsaveMessages();\r\n\t\t} finally {\r\n\t\t\tisLoading = false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction showTypingIndicator() {\r\n\t\tif (!messagesContainer) return;\r\n\r\n\t\tconst typingIndicator = document.createElement('div');\r\n\t\ttypingIndicator.className = 'dental-chatbot-typing';\r\n\t\ttypingIndicator.id = 'dental-chatbot-typing';\r\n\r\n\t\tfor (let i = 0; i < 3; i++) {\r\n\t\t\tconst dot = document.createElement('div');\r\n\t\t\tdot.className = 'dental-chatbot-typing-dot';\r\n\t\t\ttypingIndicator.appendChild(dot);\r\n\t\t}\r\n\r\n\t\tmessagesContainer.appendChild(typingIndicator);\r\n\t\tscrollToBottom();\r\n\t}\r\n\r\n\tfunction hideTypingIndicator() {\r\n\t\tconst typingIndicator = document.getElementById('dental-chatbot-typing');\r\n\t\tif (typingIndicator) {\r\n\t\t\ttypingIndicator.remove();\r\n\t\t}\r\n\t}\r\n\r\n\tasync function fetchInitialGreeting() {\r\n\t\tif (messages.length > 0) return;\r\n\r\n\t\tisLoading = true;\r\n\t\tshowTypingIndicator();\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`${API_URL}/chat`, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tuserId,\r\n\t\t\t\t\tmessage: 'hello',\r\n\t\t\t\t\tdomain: hostDomain\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tif (response.ok) {\r\n\t\t\t\tconst data = await response.json();\r\n\r\n\t\t\t\tmessages.push({\r\n\t\t\t\t\tid: data.id || generateUUID(),\r\n\t\t\t\t\tsender: 'bot',\r\n\t\t\t\t\ttext: data.text,\r\n\t\t\t\t\ttimestamp: data.timestamp ? new Date(data.timestamp) : new Date()\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(`API responded with status ${response.status}`);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error getting initial greeting:', error);\r\n\r\n\t\t\tmessages.push({\r\n\t\t\t\tid: generateUUID(),\r\n\t\t\t\tsender: 'bot',\r\n\t\t\t\ttext: `Hello! How can I help you today? You're visiting from ${hostDomain || 'an unknown domain'}.`,\r\n\t\t\t\ttimestamp: new Date()\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\thideTypingIndicator();\r\n\t\t\tisLoading = false;\r\n\t\t\trenderMessages();\r\n\t\t\tsaveMessages();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction openWidget() {\r\n\t\tif (!container) return;\r\n\r\n\t\tisMinimized = false;\r\n\t\tcontainer.classList.remove('dental-chatbot-minimized');\r\n\t\tcontainer.classList.add('dental-chatbot-expanded');\r\n\r\n\t\tif (messagesContainer) {\r\n\t\t\t(messagesContainer as HTMLElement).style.display = 'block';\r\n\t\t}\r\n\r\n\t\tconst inputContainer = container.querySelector('.dental-chatbot-input-container');\r\n\t\tif (inputContainer) {\r\n\t\t\t(inputContainer as HTMLElement).style.display = 'flex';\r\n\t\t}\r\n\r\n\t\tlocalStorage.setItem('chatbot-minimized', 'false');\r\n\t\tscrollToBottom();\r\n\t}\r\n\r\n\tfunction closeWidget() {\r\n\t\tif (!container) return;\r\n\r\n\t\tisMinimized = true;\r\n\t\tcontainer.classList.remove('dental-chatbot-expanded');\r\n\t\tcontainer.classList.add('dental-chatbot-minimized');\r\n\r\n\t\tif (messagesContainer) {\r\n\t\t\t(messagesContainer as HTMLElement).style.display = 'none';\r\n\t\t}\r\n\r\n\t\tconst inputContainer = container.querySelector('.dental-chatbot-input-container');\r\n\t\tif (inputContainer) {\r\n\t\t\t(inputContainer as HTMLElement).style.display = 'none';\r\n\t\t}\r\n\r\n\t\tlocalStorage.setItem('chatbot-minimized', 'true');\r\n\t}\r\n\r\n\tfunction toggleWidget() {\r\n\t\tif (isMinimized) {\r\n\t\t\topenWidget();\r\n\t\t} else {\r\n\t\t\tcloseWidget();\r\n\t\t}\r\n\t}\r\n\r\n\t// Automatically fetch chat history from server\r\n\tasync function fetchChatHistory() {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`${API_URL}/history/${userId}`);\r\n\t\t\tif (response.ok) {\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tif (data.messages && data.messages.length > 0) {\r\n\t\t\t\t\tmessages = data.messages.map((msg: ChatMessage) => ({\r\n\t\t\t\t\t\t...msg,\r\n\t\t\t\t\t\ttimestamp: new Date(msg.timestamp)\r\n\t\t\t\t\t}));\r\n\t\t\t\t\trenderMessages();\r\n\t\t\t\t\tsaveMessages();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching chat history:', error);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t// Try to fetch history from server\r\n\tfetchChatHistory();\r\n}\r\n\r\n// Check if document is already loaded\r\nif (document.readyState === 'complete' || document.readyState === 'interactive') {\r\n\t// Document already loaded, initialize immediately\r\n\tsetTimeout(initialize, 1);\r\n} else {\r\n\t// Wait for document to load\r\n\tdocument.addEventListener('DOMContentLoaded', initialize);\r\n}\r\n\r\n// Export nothing for TypeScript compatibility\r\nexport {};\r\n"],"names":["API_URL","initialize","injectStyles","createWidgetDOM","initializeWidget","styleElement","container","isMinimized","userId","generateUUID","messages","isLoading","hostDomain","header","messagesContainer","inputField","sendButton","savedMinimized","openWidget","loadMessages","toggleWidget","e","sendMessage","closeWidget","c","r","savedMessages","msg","renderMessages","fetchInitialGreeting","saveMessages","message","messageEl","messageText","timestamp","formatTime","scrollToBottom","date","userMessage","messageId","showTypingIndicator","response","data","hideTypingIndicator","error","typingIndicator","i","dot","inputContainer","fetchChatHistory"],"mappings":"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"}